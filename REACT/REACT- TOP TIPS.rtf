{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
a) React is ALL about components\cb1 \
\
\cb3 b) When we can, we use STATELESS FUNCTIONAL components\cb1 \
\
\cb3 c) If a React component uses state, set the initial state in the constructor and ALWAYS call super(props); first\cb1 \
\
\cb3 d) Only user this.setState() to set state... that's all that works\cb1 \
\cb3 because React will not see the change otherwise.\cb1 \
\
\cb3 e) Changing props and state can/will force a component to re-render.\cb1 \
\
\cb3 f) Always have a unique key attribute for a list of items\cb1 \
\
\cb3 h) Make as much as you can IMMUTABLE\cb1 \
\
\cb3 i) Remember ti BIND your event handlers you create at the bottom of the constructor.\'a0 Or use arrow functions.\cb1 \
\
\cb3 j) Get to know the 'lifecycle' methods.\cb1 \
\
\cb3 componentDidMount() \'a0etc.\cb1 \
\
\cb3 k) Can you make a component smaller?\'a0 It makes there some chance you can re-use it.\cb1 \
\
\cb3 l) Decide on naming conventions for EVERYTHING.\'a0 And other code styles.\cb1 \
\
\cb3 Get the TEAM to agree :)\
\
m) Remember the ... (spread/rest) operator to make copies of objects/arrays\cb1 \
\
\
\cb3 n) ONWARD AND UPWARD}